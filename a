[33mcommit be01afc21396869b071cd096d34fba6054b5bd39[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: caiobretas <caiodinizbretas2001@gmail.com>
Date:   Mon May 15 13:37:25 2023 -0300

    15/05/2023 - 13:37

[1mdiff --git a/business/__pycache__/UpdateContacts.cpython-311.pyc b/business/__pycache__/UpdateContacts.cpython-311.pyc[m
[1mindex f2931b1..8884b2d 100644[m
Binary files a/business/__pycache__/UpdateContacts.cpython-311.pyc and b/business/__pycache__/UpdateContacts.cpython-311.pyc differ
[1mdiff --git a/business/__pycache__/atualizaRepository.cpython-311.pyc b/business/__pycache__/atualizaRepository.cpython-311.pyc[m
[1mindex 53324c8..b2b9754 100644[m
Binary files a/business/__pycache__/atualizaRepository.cpython-311.pyc and b/business/__pycache__/atualizaRepository.cpython-311.pyc differ
[1mdiff --git a/business/__pycache__/conciliateCryptoTransactions.cpython-311.pyc b/business/__pycache__/conciliateCryptoTransactions.cpython-311.pyc[m
[1mindex 22cffd1..fb8fb82 100644[m
Binary files a/business/__pycache__/conciliateCryptoTransactions.cpython-311.pyc and b/business/__pycache__/conciliateCryptoTransactions.cpython-311.pyc differ
[1mdiff --git a/business/conciliateCryptoTransactions.py b/business/conciliateCryptoTransactions.py[m
[1mindex 8123c27..a3532ea 100644[m
[1m--- a/business/conciliateCryptoTransactions.py[m
[1m+++ b/business/conciliateCryptoTransactions.py[m
[36m@@ -10,7 +10,7 @@[m [mclass ConciliateCryptoTransactions:[m
         try:[m
             list_conciliations: list[Conciliation] = InterfaceConciliations(path_interface).getConciliations()[m
             for obj in list_conciliations:[m
[31m-                RepositoryCryptoTransaction(connection, engine, schema, tableName).updatebyHash(obj.hash, obj.methodid, obj.description, obj.project)[m
[32m+[m[32m                RepositoryCryptoTransaction(connection, engine, schema, tableName).updatebyHash(obj.hash, obj.methodid, obj.description)[m
             status = 'Complete'[m
         except:[m
             status = 'Failed'[m
[1mdiff --git a/controllers/controllerHTTP/__pycache__/controllerGoogle.cpython-311.pyc b/controllers/controllerHTTP/__pycache__/controllerGoogle.cpython-311.pyc[m
[1mindex 174d4ad..726d3eb 100644[m
Binary files a/controllers/controllerHTTP/__pycache__/controllerGoogle.cpython-311.pyc and b/controllers/controllerHTTP/__pycache__/controllerGoogle.cpython-311.pyc differ
[1mdiff --git a/controllers/controllerHTTP/controllerGoogle.py b/controllers/controllerHTTP/controllerGoogle.py[m
[1mindex 9324f8b..bc651c1 100644[m
[1m--- a/controllers/controllerHTTP/controllerGoogle.py[m
[1m+++ b/controllers/controllerHTTP/controllerGoogle.py[m
[36m@@ -1,4 +1,8 @@[m
[32m+[m[32mfrom __future__ import print_function[m
[32m+[m[32mimport json[m
[32m+[m[32mimport base64[m
 import logging[m
[32m+[m[32mfrom googleapiclient.errors import HttpError[m
 import gspread[m
 from google.oauth2.service_account import Credentials[m
 from oauth2client.service_account import ServiceAccountCredentials[m
[36m@@ -10,12 +14,22 @@[m [mclass ControllerGoogle:[m
         try:[m
             credentialsPath = 'credentials/credentialsGoogle.json'[m
             scopes = [[m
[31m-                'https://www.googleapis.com/auth/spreadsheets'[m
[31m-                      ][m
[31m-            self.credentials = ServiceAccountCredentials.from_json_keyfile_name(filename=credentialsPath, scopes=scopes)[m
[32m+[m[32m                'https://www.googleapis.com/auth/spreadsheets',[m
[32m+[m[32m                'https://mail.google.com',[m
[32m+[m[32m                'https://www.googleapis.com/auth/gmail.modify',[m
[32m+[m[32m                'https://www.googleapis.com/auth/gmail.compose',[m
[32m+[m[32m                'https://www.googleapis.com/auth/gmail.send',[m
[32m+[m[32m                'https://mail.google.com/',[m
[32m+[m[32m                    ][m
[32m+[m
[32m+[m[32m            with open(credentialsPath, 'r') as arquivo:[m
[32m+[m[32m                self.jsoncredentials = json.load(arquivo)[m
[32m+[m
[32m+[m[32m            self.credentials: ServiceAccountCredentials = ServiceAccountCredentials.from_json_keyfile_name(filename=credentialsPath, scopes=scopes)[m
         except Exception as e:[m
             logging.error(f'{" "* 3} Erro: {e}')[m
[31m-            [m
[32m+[m[41m    [m
[32m+[m[32mfrom gspread import Spreadsheet, Worksheet[m[41m            [m
 class GoogleSheets(ControllerGoogle):[m
     def __init__(self):[m
         super().__init__()[m
[36m@@ -23,8 +37,8 @@[m [mclass GoogleSheets(ControllerGoogle):[m
         [m
     def getRow(self, rowNumber, sheetName, worksheetId: str):[m
         try:[m
[31m-            worksheet: gspread.Spreadsheet = self.client.open_by_key(worksheetId)[m
[31m-            sheet: gspread.worksheet.Worksheet = worksheet.worksheet(sheetName)[m
[32m+[m[32m            worksheet: Spreadsheet = self.client.open_by_key(worksheetId)[m
[32m+[m[32m            sheet: Worksheet = worksheet.worksheet(sheetName)[m
             return sheet.row_values(rowNumber)[m
         except Exception as e:[m
             logging.error(f'{" "* 3} Erro: {e}')[m
[36m@@ -46,4 +60,45 @@[m [mclass GoogleSheets(ControllerGoogle):[m
             sheet.append_row(values=headers, table_range='A1')[m
             sheet.append_rows(values=list_values,table_range=range)[m
         except Exception as e:[m
[31m-            logging.error(f'{" "* 3} Erro: {e}')[m
\ No newline at end of file[m
[32m+[m[32m            logging.error(f'{" "* 3} Erro: {e}')[m
[32m+[m[41m            [m
[32m+[m
[32m+[m[32mfrom email.message import EmailMessage[m
[32m+[m[32mfrom googleapiclient.discovery import Resource, build[m
[32m+[m[32mclass GoogleGmail(ControllerGoogle):[m
[32m+[m[41m    [m
[32m+[m[32m    def __init__(self):[m
[32m+[m
[32m+[m[32m        try:[m
[32m+[m[32m            super().__init__()[m
[32m+[m[32m            self.service: Resource = build('gmail', 'v1', credentials=self.credentials)[m
[32m+[m[32m            c = dir(self.service.users().drafts())[m
[32m+[m
[32m+[m[32m        except Exception as e:[m
[32m+[m[32m            logging.error(e)[m
[32m+[m[41m            [m
[32m+[m[32mclass GoogleGmail(ControllerGoogle):[m
[32m+[m
[32m+[m[32m    def __init__(self):[m
[32m+[m[32m        try:[m
[32m+[m[32m            super().__init__()[m
[32m+[m[32m            self.service = build('gmail', 'v1', credentials=self.credentials)[m
[32m+[m[32m        except Exception as e:[m
[32m+[m[32m            logging.error(e)[m
[32m+[m
[32m+[m[32m    def setMessage(self):[m
[32m+[m[32m        message = EmailMessage()[m
[32m+[m[32m        message.set_content('Teste')[m
[32m+[m[32m        message['To'] = 'caiodbretas@icloud.com'[m
[32m+[m[32m        message['From'] = 'caio.bretas@lumxstudios.com'[m
[32m+[m[32m        message['Subject'] = 'Teste'[m
[32m+[m[32m        encoded_message = base64.urlsafe_b64encode(message.as_bytes()).decode()[m
[32m+[m[32m        create_message = {[m
[32m+[m[32m            'raw': encoded_message[m
[32m+[m[32m        }[m
[32m+[m[32m        try:[m
[32m+[m[32m            self.service.users().messages().send(userId='me', body=create_message).execute()[m
[32m+[m[32m            print('E-mail enviado com sucesso!')[m
[32m+[m[32m        except HttpError as error:[m
[32m+[m[32m            print(f'Erro ao enviar e-mail: {error}')[m
[41m+            [m
\ No newline at end of file[m
[1mdiff --git a/credentials/credentialsGoogle.json b/credentials/credentialsGoogle.json[m
[1mindex 877a5c5..917bbfe 100644[m
[1m--- a/credentials/credentialsGoogle.json[m
[1m+++ b/credentials/credentialsGoogle.json[m
[36m@@ -9,4 +9,4 @@[m
     "token_uri": "https://oauth2.googleapis.com/token",[m
     "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",[m
     "client_x509_cert_url": "https://www.google